from numpy.linalg import norm
from sentence_transformers import SentenceTransformer
from typing import List
import numpy as np

class EmbeddingGenerator:
    def __init__(self, model_name: str = "msmarco-distilroberta-base-v2"):
        """
        Initializes the EmbeddingGenerator with a SentenceTransformer model.

        Parameters:
        model_name (str): Name of the model to use for generating embeddings.
        """
        self.model_name = model_name
        self.model = SentenceTransformer(model_name)

    def generate_embeddings(self, text: List[str]) -> np.ndarray:
        """
        Generates embeddings for the given text.

        Parameters:
        text (List[str]): List of strings to generate embeddings for.

        Returns:
        np.ndarray: The embeddings generated by the model.
        """
        return self.model.encode(text)


def cosine_similarity(a, b):
    return np.dot(a, b)/(norm(a)*norm(b))
